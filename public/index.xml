<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Portfolio</title>
    <link>/</link>
    <description>Recent content on Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 20 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Project 1: Exploratory Data Analysis</title>
      <link>/project1/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/project1/</guid>
      <description>3 separate datasets were used to create the final dataset. The first is in the package Ecdat, and is called “breaches”. This dataset was created by the US Department of Health and Human Services. There are many variables in this dataset, but for my analysis, only ‘State’ was used. Another variable was created called ‘Cyber’ that summed up the total number of security breaches by state. The second dataset used was “USstateAbbreviations” in order to convert the 2 letter stae code from the “breaches” dataset into the full name of the state.</description>
    </item>
    
    <item>
      <title>My New Post</title>
      <link>/blog/my-new-post/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/my-new-post/</guid>
      <description>Python The following is an example of slicing.
x=[&amp;#39;p&amp;#39;, &amp;#39;y&amp;#39;, &amp;#39;t&amp;#39;, &amp;#39;h&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;n&amp;#39;] x[2:4] #elements between slices 2 and 3 (or elements from position 2 up to but not including 4) ## [&amp;#39;t&amp;#39;, &amp;#39;h&amp;#39;] The following is an example of using re.findall() to match the IP addresses in this string.
import re string=&amp;quot;Jan 13 00:48:59: DROP service 68-&amp;gt;67(udp) from 213.92.153.167 to 69.43.107.219, prefix: \&amp;quot;spoof iana-0/8\&amp;quot; \ (in: eth0 69.</description>
    </item>
    
    <item>
      <title>Project 2: Modeling, Testing, and Predicting</title>
      <link>/project2/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/project2/</guid>
      <description>library(mosaicData) ?Gestation gestation &amp;lt;- Gestation gestation &amp;lt;- gestation %&amp;gt;% mutate(gest=gestation, parwt=(wt.1+dwt)/2, smoke=ifelse(smoke==0, 1, 0)) %&amp;gt;% select(gest, wt, parwt, inc, smoke) %&amp;gt;% na.omit() nrow(Gestation) ## [1] 1236 637*5 ## [1] 3185 This Gestation Dataset is from a study examining the link between different factors and male health at birth. The first variable is ‘gest’. This variable is numeric and measures the length of gestation in days. The second variable is ‘wt’.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/projects/</guid>
      <description>Projects Here are some projects I have recently completed:
  Exploratory Data Analysis with Tidyverse Tools
  Modeling, Testing, and Classification
  </description>
    </item>
    
  </channel>
</rss>